type Coffee {
    name: String
    description: String
    price: Float
    id: String
    createdAt: String
    updatedAt: String
}
type CoffeeImage{
    coffeeId:String,
    url:String,
    id:String,
    width:Int,
    height:Int,
    altText:String,
}
input CoffeeImageInput{
    coffeeId:String,
    url:String,
    id:String,
    width:Int,
    height:Int,
    altText:String,
}
input CoffeeInput {
    name: String
    description: String
    price: Float
    id: String
    createdAt: String
    updatedAt: String
}

type Query {
    getCoffeeById(coffeeId:String!): Coffee
    listAllCoffees:[Coffee]
    listAllImagesFromCoffee(coffeeId:String):[CoffeeImage]
    getCoffeeImageById(coffeeImageId:String):CoffeeImage
}
type Mutation {
    createCoffee(coffee:CoffeeInput!):Coffee
    updateCoffee(coffee:CoffeeInput!):Coffee
    deleteCoffee(coffeeId:String!):Boolean
    createCoffeeImage(coffeeImage:[CoffeeImageInput!]):[CoffeeImage]
    deleteCoffeeImage(coffeeImageId:String!):Boolean
}